{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\restaurant_system\\\\frontend\\\\src\\\\components\\\\UI\\\\InputField\\\\InputField.js\";\nimport React from \"react\";\nimport styles from \"./InputField.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = props => {\n  const {\n    label,\n    type,\n    name,\n    placeholder,\n    value,\n    options,\n    optionValueKey,\n    optionKey,\n    optionJsonKey,\n    onChange\n  } = props;\n  const renderInput = inputType => {\n    switch (inputType) {\n      case [\"text\", \"date\", \"number\"].find(type => type === inputType):\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          name: name,\n          className: styles[\"input\"],\n          style: {\n            width: \"94%\"\n          },\n          value: value,\n          placeholder: placeholder,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      case \"select\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles[\"input\"],\n          name: name,\n          value: value,\n          onChange: onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), \">\", options && options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: optionValueKey ? option[optionValueKey] : option,\n            children: optionJsonKey ? option[optionJsonKey] : option\n          }, optionKey ? option[optionKey] : option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"input-group\"],\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), renderInput(type)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","styles","InputField","props","label","type","name","placeholder","value","options","optionValueKey","optionKey","optionJsonKey","onChange","renderInput","inputType","find","width","map","option"],"sources":["C:/Users/USER/Documents/GitHub/restaurant_system/frontend/src/components/UI/InputField/InputField.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./InputField.module.css\";\r\n\r\nconst InputField = (props) => {\r\n  const {\r\n    label,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    value,\r\n    options,\r\n    optionValueKey,\r\n    optionKey,\r\n    optionJsonKey,\r\n    onChange,\r\n  } = props;\r\n\r\n  const renderInput = (inputType) => {\r\n    switch (inputType) {\r\n      case [\"text\", \"date\", \"number\"].find((type) => type === inputType):\r\n        return (\r\n          <input\r\n            type={type}\r\n            name={name}\r\n            className={styles[\"input\"]}\r\n            style={{ width: \"94%\" }}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n          />\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <select\r\n            className={styles[\"input\"]}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n          >\r\n            <option value={\"\"}></option>>\r\n            {options &&\r\n              options.map((option) => (\r\n                <option\r\n                  key={optionKey ? option[optionKey] : option}\r\n                  value={optionValueKey ? option[optionValueKey] : option}\r\n                >\r\n                  {optionJsonKey ? option[optionJsonKey] : option}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"input-group\"]}>\r\n      {label && <label htmlFor={name}>{label}</label>}\r\n      {renderInput(type)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAAC;AAE7C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IACJC,KAAK;IACLC,IAAI;IACJC,IAAI;IACJC,WAAW;IACXC,KAAK;IACLC,OAAO;IACPC,cAAc;IACdC,SAAS;IACTC,aAAa;IACbC;EACF,CAAC,GAAGV,KAAK;EAET,MAAMW,WAAW,GAAIC,SAAS,IAAK;IACjC,QAAQA,SAAS;MACf,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAACC,IAAI,CAAEX,IAAI,IAAKA,IAAI,KAAKU,SAAS,CAAC;QAChE,oBACE;UACE,IAAI,EAAEV,IAAK;UACX,IAAI,EAAEC,IAAK;UACX,SAAS,EAAEL,MAAM,CAAC,OAAO,CAAE;UAC3B,KAAK,EAAE;YAAEgB,KAAK,EAAE;UAAM,CAAE;UACxB,KAAK,EAAET,KAAM;UACb,WAAW,EAAED,WAAY;UACzB,QAAQ,EAAEM;QAAS;UAAA;UAAA;UAAA;QAAA,QACnB;MAEN,KAAK,QAAQ;QACX,oBACE;UACE,SAAS,EAAEZ,MAAM,CAAC,OAAO,CAAE;UAC3B,IAAI,EAAEK,IAAK;UACX,KAAK,EAAEE,KAAM;UACb,QAAQ,EAAEK,QAAS;UAAA,wBAEnB;YAAQ,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAU,OAC3BJ,OAAO,IACNA,OAAO,CAACS,GAAG,CAAEC,MAAM,iBACjB;YAEE,KAAK,EAAET,cAAc,GAAGS,MAAM,CAACT,cAAc,CAAC,GAAGS,MAAO;YAAA,UAEvDP,aAAa,GAAGO,MAAM,CAACP,aAAa,CAAC,GAAGO;UAAM,GAH1CR,SAAS,GAAGQ,MAAM,CAACR,SAAS,CAAC,GAAGQ,MAAM;YAAA;YAAA;YAAA;UAAA,QAK9C,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACG;IACT;EAER,CAAC;EAED,oBACE;IAAK,SAAS,EAAElB,MAAM,CAAC,aAAa,CAAE;IAAA,WACnCG,KAAK,iBAAI;MAAO,OAAO,EAAEE,IAAK;MAAA,UAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,EAC9CU,WAAW,CAACT,IAAI,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEV,CAAC;AAAC,KAzDIH,UAAU;AA2DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}